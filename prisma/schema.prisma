// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  name     String?
  password String
  role     UserRole @default(USER)

  examTemplates ExamTemplate[]
}

model QuestionOption {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  questionId  String? @db.ObjectId

  Question Question? @relation(fields: [questionId], references: [id])
}

model Question {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  enunciation    String
  options        QuestionOption[]
  examTemplateId String?          @db.ObjectId

  ExamTemplate ExamTemplate? @relation(fields: [examTemplateId], references: [id])
}

enum ExamTemplateStatus {
  CREATED
  PUBLISHED
  ARCHIVED
}

model ExamTemplate {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  questions Question[]
  authorId  String?            @db.ObjectId
  status    ExamTemplateStatus @default(CREATED)
  createdAt DateTime
  updateAt  DateTime

  User User? @relation(fields: [authorId], references: [id])
}
